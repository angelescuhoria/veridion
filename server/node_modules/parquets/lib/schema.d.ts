import { FieldDefinition, ParquetBuffer, ParquetCompression, ParquetField, ParquetRecord, SchemaDefinition } from './declare';
/**
 * A parquet file schema
 */
export declare class ParquetSchema {
    schema: Record<string, FieldDefinition>;
    fields: Record<string, ParquetField>;
    fieldList: ParquetField[];
    /**
     * Create a new schema from a JSON schema definition
     */
    constructor(schema: SchemaDefinition);
    /**
     * Retrieve a field definition
     */
    findField(path: string): ParquetField;
    findField(path: string[]): ParquetField;
    /**
     * Retrieve a field definition and all the field's ancestors
     */
    findFieldBranch(path: string): ParquetField[];
    findFieldBranch(path: string[]): ParquetField[];
    shredRecord(record: ParquetRecord, buffer: ParquetBuffer): void;
    materializeRecords(buffer: ParquetBuffer): ParquetRecord[];
    compress(type: ParquetCompression): this;
    buffer(): ParquetBuffer;
}
